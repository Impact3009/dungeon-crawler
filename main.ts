namespace SpriteKind {
    export const Teleporter = SpriteKind.create()
    export const Weapon = SpriteKind.create()
    export const wee = SpriteKind.create()
    export const Boss = SpriteKind.create()
}
scene.onOverlapTile(SpriteKind.Player, assets.tile`myTile19`, function (sprite, location) {
    mySprite.vy += -550
})
controller.up.onEvent(ControllerButtonEvent.Pressed, function () {
    if (mySprite.isHittingTile(CollisionDirection.Bottom)) {
        mySprite.vy += -115
    }
})
scene.onOverlapTile(SpriteKind.Player, assets.tile`myTile15`, function (sprite, location) {
    Level += 1
    sprites.destroyAllSpritesOfKind(SpriteKind.Enemy)
    pause(100)
    spawn_boss = 1
})
controller.A.onEvent(ControllerButtonEvent.Pressed, function () {
    fire_ball = sprites.create(assets.image`Fireball`, SpriteKind.Projectile)
    fire_ball.setPosition(mySprite.x, mySprite.y)
    if (Direction > 0) {
        fire_ball.setImage(assets.image`Fireball`)
    }
    if (Direction < 0) {
        fire_ball.setImage(assets.image`myImage3`)
    }
    fire_ball.ax += Direction
    fire_ball.setFlag(SpriteFlag.DestroyOnWall, true)
})
sprites.onOverlap(SpriteKind.Projectile, SpriteKind.Player, function (sprite, otherSprite) {
    HEALTH_BAR.value += randint(-15, -5)
    sprites.destroy(Boss_Projectile)
})
controller.left.onEvent(ControllerButtonEvent.Pressed, function () {
    Direction = -400
})
controller.right.onEvent(ControllerButtonEvent.Released, function () {
    Direction = randint(200, 400)
})
controller.left.onEvent(ControllerButtonEvent.Released, function () {
    Direction = randint(-400, -200)
})
statusbars.onZero(StatusBarKind.EnemyHealth, function (status) {
    sprites.destroy(myEnemy)
})
statusbars.onZero(StatusBarKind.Health, function (status) {
    Deaths += 1
    tiles.placeOnRandomTile(mySprite, assets.tile`myTile3`)
    HEALTH_BAR.value = 100
})
scene.onOverlapTile(SpriteKind.Player, assets.tile`myTile16`, function (sprite, location) {
    HEALTH_BAR.value += -5
    mySprite.vy += 115
})
scene.onOverlapTile(SpriteKind.Player, assets.tile`myTile20`, function (sprite, location) {
    tiles.placeOnRandomTile(mySprite, sprites.dungeon.collectibleInsignia)
})
controller.right.onEvent(ControllerButtonEvent.Pressed, function () {
    Direction = 400
})
sprites.onOverlap(SpriteKind.Weapon, SpriteKind.Boss, function (sprite, otherSprite) {
    Boss_health.value += randint(-15, -20)
    if (Boss_health.value <= 0) {
        sprites.destroy(Boss)
        Boss_dead = 1
    }
})
scene.onOverlapTile(SpriteKind.Player, assets.tile`myTile5`, function (sprite, location) {
    HEALTH_BAR.value += -5
    mySprite.vy += -120
})
sprites.onOverlap(SpriteKind.Projectile, SpriteKind.Enemy, function (sprite, otherSprite) {
    Enemy_health.value += randint(-15, -5)
    if (Enemy_health.value <= 1) {
        sprites.destroy(myEnemy)
    }
})
scene.onOverlapTile(SpriteKind.Player, sprites.dungeon.collectibleInsignia, function (sprite, location) {
    tiles.placeOnRandomTile(mySprite, assets.tile`myTile13`)
})
sprites.onOverlap(SpriteKind.Player, SpriteKind.Enemy, function (sprite, otherSprite) {
    if (PLAYER_COLLECT_SHIELD == 1) {
        HEALTH_BAR.value += -2
    }
    if (PLAYER_COLLECT_SHIELD == 0) {
        HEALTH_BAR.value += -5
    }
})
let PLAYER_COLLECT_SWORD = 0
let Boss_projectile_spawn = 0
let PLAYER_COLLECT_SHIELD = 0
let Enemy_health: StatusBarSprite = null
let Boss: Sprite = null
let Boss_health: StatusBarSprite = null
let myEnemy: Sprite = null
let Boss_Projectile: Sprite = null
let fire_ball: Sprite = null
let Boss_dead = 0
let Direction = 0
let HEALTH_BAR: StatusBarSprite = null
let mySprite: Sprite = null
let spawn_boss = 0
spawn_boss = 0
let Level = 1
if (Level == 1) {
    tiles.setCurrentTilemap(tilemap`level4`)
}
mySprite = sprites.create(assets.image`Spirit`, SpriteKind.Player)
mySprite.setStayInScreen(true)
HEALTH_BAR = statusbars.create(20, 4, StatusBarKind.Health)
HEALTH_BAR.attachToSprite(mySprite, 0, 0)
HEALTH_BAR.value = 100
HEALTH_BAR.setBarBorder(1, 15)
HEALTH_BAR.setStatusBarFlag(StatusBarFlag.SmoothTransition, false)
HEALTH_BAR.setColor(7, 15, 2)
tiles.placeOnRandomTile(mySprite, assets.tile`myTile3`)
scene.cameraFollowSprite(mySprite)
mySprite.setBounceOnWall(false)
music.play(music.stringPlayable("E B C5 A B G A F ", 120), music.PlaybackMode.LoopingInBackground)
let Deaths = 0
game.setGameOverMessage(false, "Body Desecrated")
let SWORD = sprites.create(img`
    . . . . . . . . . . . . . . . . 
    . . . . . . . . . . . . . f . . 
    . . . . . . . . . . . f f f f . 
    . . . . . . . . . f f f 2 1 f . 
    . . . . . . . . f f 1 2 2 1 f . 
    . . . . . . . . f 1 2 2 2 1 f . 
    . . . . . . . f f 1 2 2 1 f . . 
    . . . . . . f f 1 2 2 1 f . . . 
    . . . . . f 1 1 2 2 1 f . . . . 
    . . . f f 1 2 2 2 1 f . . . . . 
    . . f 5 4 2 2 2 1 f . . . . . . 
    . f f 5 2 2 2 1 f . . . . . . . 
    . f 5 5 5 2 f f . . . . . . . . 
    f 5 f f 5 5 f . . . . . . . . . 
    f f . . f f . . . . . . . . . . 
    . . . . . . . . . . . . . . . . 
    `, SpriteKind.Weapon)
let Shield = sprites.create(img`
    . . . . . . . . . . . . . . . . 
    . . . . . . . . . . . . . . . . 
    . . . . . . . . . . . . . . . . 
    . . . . . . . . . . . . . . . . 
    . . . . . . . . . . . . . . . . 
    . . . . . . . . . . . . . . . . 
    . . . . f f f f f f f f . . . . 
    . . . f 7 7 7 7 7 7 7 7 f . . . 
    . . . f 6 6 6 6 6 6 6 6 f . . . 
    . . . f 6 6 6 6 6 6 6 6 f . . . 
    . . . f 6 6 6 6 6 6 6 6 f . . . 
    . . . f 7 7 7 7 7 7 7 7 f . . . 
    . . . f 7 7 7 7 7 7 7 7 f . . . 
    . . . . f 7 7 7 7 7 7 f . . . . 
    . . . . . f 6 6 6 6 f . . . . . 
    . . . . . . f f f f . . . . . . 
    `, SpriteKind.Weapon)
tiles.placeOnRandomTile(SWORD, assets.tile`myTile6`)
tiles.placeOnRandomTile(Shield, assets.tile`myTile6`)
HEALTH_BAR.setLabel("HP")
mySprite.ay = 294
Direction = 0
Boss_dead = 0
fire_ball = sprites.create(assets.image`Fireball`, SpriteKind.Projectile)
game.onUpdateInterval(2000, function () {
    myEnemy = sprites.create(img`
        ........................
        ........................
        ........................
        ........................
        ..........ffff..........
        ........ff1111ff........
        .......fb111111bf.......
        .......f11111111f.......
        ......fd11111111df......
        ......fd11111111df......
        ......fddd1111dddf......
        ......fbdbfddfbdbf......
        ......fcdcf11fcdcf......
        .......fb111111bf.......
        ......fffcdb1bdffff.....
        ....fc111cbfbfc111cf....
        ....f1b1b1ffff1b1b1f....
        ....fbfbffffffbfbfbf....
        .........ffffff.........
        ...........fff..........
        ........................
        ........................
        ........................
        ........................
        `, SpriteKind.Enemy)
    tiles.placeOnRandomTile(myEnemy, assets.tile`myTile9`)
    Enemy_health = statusbars.create(20, 4, StatusBarKind.EnemyHealth)
    Enemy_health.max = 30
    myEnemy.follow(mySprite, randint(45, 70))
    Enemy_health.attachToSprite(myEnemy, 0, 0)
    Enemy_health.setStatusBarFlag(StatusBarFlag.SmoothTransition, true)
    animation.runImageAnimation(
    myEnemy,
    [img`
        ........................
        ........................
        ........................
        ........................
        ..........ffff..........
        ........ff1111ff........
        .......fb111111bf.......
        .......f11111111f.......
        ......fd11111111df......
        ......fd11111111df......
        ......fddd1111dddf......
        ......fbdbfddfbdbf......
        ......fcdcf11fcdcf......
        .......fb111111bf.......
        ......fffcdb1bdffff.....
        ....fc111cbfbfc111cf....
        ....f1b1b1ffff1b1b1f....
        ....fbfbffffffbfbfbf....
        .........ffffff.........
        ...........fff..........
        ........................
        ........................
        ........................
        ........................
        `,img`
        ........................
        ........................
        ........................
        ........................
        ..........ffff..........
        ........ff1111ff........
        .......fb111111bf.......
        .......f11111111f.......
        ......fd11111111df......
        ......fd11111111df......
        ......fddd1111dddf......
        ......fbdbfddfbdbf......
        ......fcdcf11fcdcf......
        .......fb111111ffff.....
        ......fffcdb1bc111cf....
        ....fc111cbfbf1b1b1f....
        ....f1b1b1ffffbfbfbf....
        ....fbfbfffffff.........
        .........fffff..........
        ..........fff...........
        ........................
        ........................
        ........................
        ........................
        `,img`
        ........................
        ........................
        ........................
        ........................
        ..........ffff..........
        ........ff1111ff........
        .......fb111111bf.......
        .......f11111111f.......
        ......fd11111111df......
        ......fd11111111df......
        ......fddd1111dddf......
        ......fbdbfddfbdbf......
        ......fcdcf11fcdcf......
        .......fb111111bf.......
        ......fffcdb1bdffff.....
        ....fc111cbfbfc111cf....
        ....f1b1b1ffff1b1b1f....
        ....fbfbffffffbfbfbf....
        .........ffffff.........
        ...........fff..........
        ........................
        ........................
        ........................
        ........................
        `,img`
        ........................
        ........................
        ........................
        ........................
        ..........ffff..........
        ........ff1111ff........
        .......fb111111bf.......
        .......f11111111f.......
        ......fd11111111df......
        ......fd11111111df......
        ......fddd1111dddf......
        ......fbdbfddfbdbf......
        ......fcdcf11fcdcf......
        .....ffff111111bf.......
        ....fc111cdb1bdfff......
        ....f1b1bcbfbfc111cf....
        ....fbfbfbffff1b1b1f....
        .........fffffffbfbf....
        ..........fffff.........
        ...........fff..........
        ........................
        ........................
        ........................
        ........................
        `],
    500,
    true
    )
})
forever(function () {
    if (Level == 1) {
        tiles.setCurrentTilemap(tilemap`level4`)
        controller.moveSprite(mySprite, 100, 0)
    }
    if (Level == 2) {
        tiles.setCurrentTilemap(tilemap`level1`)
        controller.moveSprite(mySprite, 100, 100)
    }
    if (Level > 2) {
        tiles.setCurrentTilemap(tilemap`level`)
        game.gameOver(true)
    }
    if (Level == 2) {
        if (spawn_boss == 1) {
            Boss_projectile_spawn = 1
            Boss = sprites.create(assets.image`myImage4`, SpriteKind.Boss)
            tiles.placeOnRandomTile(Boss, assets.tile`myTile10`)
            Boss_health = statusbars.create(20, 4, StatusBarKind.EnemyHealth)
            Boss_health.max = 1000000000000000000
            spawn_boss = 0
            Boss_health.attachToSprite(Boss, -44, 0)
            Boss.setVelocity(100, -100)
            Boss.changeScale(7, ScaleAnchor.Middle)
            Boss.setBounceOnWall(true)
        }
    }
    if (mySprite.overlapsWith(SWORD)) {
        SWORD.setPosition(mySprite.x, mySprite.y)
        PLAYER_COLLECT_SWORD = 1
    }
    if (Shield.overlapsWith(SWORD)) {
        if (PLAYER_COLLECT_SWORD == 0) {
            tiles.placeOnRandomTile(Shield, assets.tile`myTile6`)
        }
    }
    if (mySprite.overlapsWith(Shield)) {
        Shield.setPosition(mySprite.x, mySprite.y)
        PLAYER_COLLECT_SHIELD = 1
    }
    if (PLAYER_COLLECT_SWORD == 1) {
        SWORD.setPosition(mySprite.x + randint(-30, 30), mySprite.y + randint(-5, 10))
        SWORD.setBounceOnWall(true)
    }
    if (PLAYER_COLLECT_SHIELD == 1) {
        Shield.setPosition(mySprite.x, mySprite.y)
        Shield.setBounceOnWall(true)
    }
    if (Deaths == 2) {
        HEALTH_BAR.max += 300
        HEALTH_BAR.value += 300
    }
    if (Direction > 0) {
        animation.runImageAnimation(
        mySprite,
        assets.animation`heroWalkShieldRight`,
        100,
        true
        )
    }
    if (Direction < 0) {
        animation.runImageAnimation(
        mySprite,
        assets.animation`heroWalkLeft`,
        100,
        true
        )
    }
})
game.onUpdateInterval(100, function () {
    if (Boss_projectile_spawn == 1) {
        if (Level == 2) {
            if (Boss_dead == 1) {
                Boss_Projectile = sprites.create(assets.image`myImage6`, SpriteKind.Projectile)
                Boss_Projectile.follow(mySprite, 400)
                tiles.placeOnRandomTile(Boss_Projectile, assets.tile`myTile10`)
            }
        }
    }
    if (SWORD.overlapsWith(myEnemy)) {
        Enemy_health.value += randint(-15, -5)
    }
    if (Shield.overlapsWith(myEnemy)) {
        Enemy_health.value += randint(-15, -5)
    }
    if (Enemy_health.value <= 1) {
        sprites.destroy(myEnemy)
    }
})
